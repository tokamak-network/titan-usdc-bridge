/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "MasterMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MasterMinter__factory>;
    getContractFactory(
      name: "MintController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintController__factory>;
    getContractFactory(
      name: "MinterManagementInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterManagementInterface__factory>;
    getContractFactory(
      name: "ContractThatCallsPublicFunctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractThatCallsPublicFunctions__factory>;
    getContractFactory(
      name: "ContractThatReverts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractThatReverts__factory>;
    getContractFactory(
      name: "ContractWithExternalFunctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractWithExternalFunctions__factory>;
    getContractFactory(
      name: "ContractWithPublicFunctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractWithPublicFunctions__factory>;
    getContractFactory(
      name: "DummyERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyERC20__factory>;
    getContractFactory(
      name: "ECRecoverTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECRecoverTest__factory>;
    getContractFactory(
      name: "EIP712Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Test__factory>;
    getContractFactory(
      name: "MessageHashUtilsTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MessageHashUtilsTest__factory>;
    getContractFactory(
      name: "MockERC1271Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC1271Wallet__factory>;
    getContractFactory(
      name: "MockERC1271WalletReturningBytes32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC1271WalletReturningBytes32__factory>;
    getContractFactory(
      name: "MockERC1271WalletWithCustomValidation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC1271WalletWithCustomValidation__factory>;
    getContractFactory(
      name: "MockStateModifyingERC1271Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStateModifyingERC1271Wallet__factory>;
    getContractFactory(
      name: "MockFiatTokenWithEditableBalanceAndBlacklistStates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFiatTokenWithEditableBalanceAndBlacklistStates__factory>;
    getContractFactory(
      name: "MockFiatTokenWithEditableChainId",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockFiatTokenWithEditableChainId__factory>;
    getContractFactory(
      name: "UpgradedFiatToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradedFiatToken__factory>;
    getContractFactory(
      name: "UpgradedFiatTokenNewFieldsNewLogicTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsNewLogicTest__factory>;
    getContractFactory(
      name: "UpgradedFiatTokenNewFieldsTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsTest__factory>;
    getContractFactory(
      name: "UpgradedFiatTokenV2_2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradedFiatTokenV2_2__factory>;
    getContractFactory(
      name: "UpgradedFiatTokenV2_2NewFieldsTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradedFiatTokenV2_2NewFieldsTest__factory>;
    getContractFactory(
      name: "AdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeabilityProxy__factory>;
    getContractFactory(
      name: "SignatureChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureChecker__factory>;
    getContractFactory(
      name: "FiatTokenV1_1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenV1_1__factory>;
    getContractFactory(
      name: "Rescuable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rescuable__factory>;
    getContractFactory(
      name: "AbstractFiatTokenV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractFiatTokenV1__factory>;
    getContractFactory(
      name: "Blacklistable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Blacklistable__factory>;
    getContractFactory(
      name: "FiatTokenProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenProxy__factory>;
    getContractFactory(
      name: "FiatTokenV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenV1__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "AbstractFiatTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractFiatTokenV2__factory>;
    getContractFactory(
      name: "EIP2612",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP2612__factory>;
    getContractFactory(
      name: "EIP3009",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP3009__factory>;
    getContractFactory(
      name: "EIP712Domain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Domain__factory>;
    getContractFactory(
      name: "FiatTokenUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenUtil__factory>;
    getContractFactory(
      name: "FiatTokenV2_1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenV2_1__factory>;
    getContractFactory(
      name: "FiatTokenV2_2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenV2_2__factory>;
    getContractFactory(
      name: "FiatTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FiatTokenV2__factory>;
    getContractFactory(
      name: "AbstractV2Upgrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractV2Upgrader__factory>;
    getContractFactory(
      name: "AbstractUpgraderHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractUpgraderHelper__factory>;
    getContractFactory(
      name: "V2_2UpgraderHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2_2UpgraderHelper__factory>;
    getContractFactory(
      name: "V2UpgraderHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2UpgraderHelper__factory>;
    getContractFactory(
      name: "V2_1Upgrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2_1Upgrader__factory>;
    getContractFactory(
      name: "V2_2Upgrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2_2Upgrader__factory>;
    getContractFactory(
      name: "V2Upgrader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2Upgrader__factory>;

    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "Migrations",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "Controller",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Controller>;
    getContractAt(
      name: "MasterMinter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MasterMinter>;
    getContractAt(
      name: "MintController",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MintController>;
    getContractAt(
      name: "MinterManagementInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterManagementInterface>;
    getContractAt(
      name: "ContractThatCallsPublicFunctions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractThatCallsPublicFunctions>;
    getContractAt(
      name: "ContractThatReverts",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractThatReverts>;
    getContractAt(
      name: "ContractWithExternalFunctions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractWithExternalFunctions>;
    getContractAt(
      name: "ContractWithPublicFunctions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractWithPublicFunctions>;
    getContractAt(
      name: "DummyERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyERC20>;
    getContractAt(
      name: "ECRecoverTest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECRecoverTest>;
    getContractAt(
      name: "EIP712Test",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Test>;
    getContractAt(
      name: "MessageHashUtilsTest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MessageHashUtilsTest>;
    getContractAt(
      name: "MockERC1271Wallet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC1271Wallet>;
    getContractAt(
      name: "MockERC1271WalletReturningBytes32",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC1271WalletReturningBytes32>;
    getContractAt(
      name: "MockERC1271WalletWithCustomValidation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC1271WalletWithCustomValidation>;
    getContractAt(
      name: "MockStateModifyingERC1271Wallet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStateModifyingERC1271Wallet>;
    getContractAt(
      name: "MockFiatTokenWithEditableBalanceAndBlacklistStates",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFiatTokenWithEditableBalanceAndBlacklistStates>;
    getContractAt(
      name: "MockFiatTokenWithEditableChainId",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockFiatTokenWithEditableChainId>;
    getContractAt(
      name: "UpgradedFiatToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradedFiatToken>;
    getContractAt(
      name: "UpgradedFiatTokenNewFieldsNewLogicTest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsNewLogicTest>;
    getContractAt(
      name: "UpgradedFiatTokenNewFieldsTest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsTest>;
    getContractAt(
      name: "UpgradedFiatTokenV2_2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradedFiatTokenV2_2>;
    getContractAt(
      name: "UpgradedFiatTokenV2_2NewFieldsTest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradedFiatTokenV2_2NewFieldsTest>;
    getContractAt(
      name: "AdminUpgradeabilityProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminUpgradeabilityProxy>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UpgradeabilityProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeabilityProxy>;
    getContractAt(
      name: "SignatureChecker",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureChecker>;
    getContractAt(
      name: "FiatTokenV1_1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenV1_1>;
    getContractAt(
      name: "Rescuable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Rescuable>;
    getContractAt(
      name: "AbstractFiatTokenV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractFiatTokenV1>;
    getContractAt(
      name: "Blacklistable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Blacklistable>;
    getContractAt(
      name: "FiatTokenProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenProxy>;
    getContractAt(
      name: "FiatTokenV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenV1>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "AbstractFiatTokenV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractFiatTokenV2>;
    getContractAt(
      name: "EIP2612",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP2612>;
    getContractAt(
      name: "EIP3009",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP3009>;
    getContractAt(
      name: "EIP712Domain",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Domain>;
    getContractAt(
      name: "FiatTokenUtil",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenUtil>;
    getContractAt(
      name: "FiatTokenV2_1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenV2_1>;
    getContractAt(
      name: "FiatTokenV2_2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenV2_2>;
    getContractAt(
      name: "FiatTokenV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FiatTokenV2>;
    getContractAt(
      name: "AbstractV2Upgrader",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractV2Upgrader>;
    getContractAt(
      name: "AbstractUpgraderHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractUpgraderHelper>;
    getContractAt(
      name: "V2_2UpgraderHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.V2_2UpgraderHelper>;
    getContractAt(
      name: "V2UpgraderHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.V2UpgraderHelper>;
    getContractAt(
      name: "V2_1Upgrader",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.V2_1Upgrader>;
    getContractAt(
      name: "V2_2Upgrader",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.V2_2Upgrader>;
    getContractAt(
      name: "V2Upgrader",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.V2Upgrader>;

    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Migrations>;
    deployContract(
      name: "Controller",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Controller>;
    deployContract(
      name: "MasterMinter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MasterMinter>;
    deployContract(
      name: "MintController",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MintController>;
    deployContract(
      name: "MinterManagementInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinterManagementInterface>;
    deployContract(
      name: "ContractThatCallsPublicFunctions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractThatCallsPublicFunctions>;
    deployContract(
      name: "ContractThatReverts",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractThatReverts>;
    deployContract(
      name: "ContractWithExternalFunctions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractWithExternalFunctions>;
    deployContract(
      name: "ContractWithPublicFunctions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractWithPublicFunctions>;
    deployContract(
      name: "DummyERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DummyERC20>;
    deployContract(
      name: "ECRecoverTest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECRecoverTest>;
    deployContract(
      name: "EIP712Test",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Test>;
    deployContract(
      name: "MessageHashUtilsTest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MessageHashUtilsTest>;
    deployContract(
      name: "MockERC1271Wallet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1271Wallet>;
    deployContract(
      name: "MockERC1271WalletReturningBytes32",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1271WalletReturningBytes32>;
    deployContract(
      name: "MockERC1271WalletWithCustomValidation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1271WalletWithCustomValidation>;
    deployContract(
      name: "MockStateModifyingERC1271Wallet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockStateModifyingERC1271Wallet>;
    deployContract(
      name: "MockFiatTokenWithEditableBalanceAndBlacklistStates",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockFiatTokenWithEditableBalanceAndBlacklistStates>;
    deployContract(
      name: "MockFiatTokenWithEditableChainId",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockFiatTokenWithEditableChainId>;
    deployContract(
      name: "UpgradedFiatToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatToken>;
    deployContract(
      name: "UpgradedFiatTokenNewFieldsNewLogicTest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsNewLogicTest>;
    deployContract(
      name: "UpgradedFiatTokenNewFieldsTest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsTest>;
    deployContract(
      name: "UpgradedFiatTokenV2_2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenV2_2>;
    deployContract(
      name: "UpgradedFiatTokenV2_2NewFieldsTest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenV2_2NewFieldsTest>;
    deployContract(
      name: "AdminUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "UpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradeabilityProxy>;
    deployContract(
      name: "SignatureChecker",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureChecker>;
    deployContract(
      name: "FiatTokenV1_1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV1_1>;
    deployContract(
      name: "Rescuable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Rescuable>;
    deployContract(
      name: "AbstractFiatTokenV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractFiatTokenV1>;
    deployContract(
      name: "Blacklistable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Blacklistable>;
    deployContract(
      name: "FiatTokenProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenProxy>;
    deployContract(
      name: "FiatTokenV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV1>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "AbstractFiatTokenV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractFiatTokenV2>;
    deployContract(
      name: "EIP2612",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP2612>;
    deployContract(
      name: "EIP3009",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP3009>;
    deployContract(
      name: "EIP712Domain",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Domain>;
    deployContract(
      name: "FiatTokenUtil",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenUtil>;
    deployContract(
      name: "FiatTokenV2_1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV2_1>;
    deployContract(
      name: "FiatTokenV2_2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV2_2>;
    deployContract(
      name: "FiatTokenV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV2>;
    deployContract(
      name: "AbstractV2Upgrader",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractV2Upgrader>;
    deployContract(
      name: "AbstractUpgraderHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractUpgraderHelper>;
    deployContract(
      name: "V2_2UpgraderHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2_2UpgraderHelper>;
    deployContract(
      name: "V2UpgraderHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2UpgraderHelper>;
    deployContract(
      name: "V2_1Upgrader",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2_1Upgrader>;
    deployContract(
      name: "V2_2Upgrader",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2_2Upgrader>;
    deployContract(
      name: "V2Upgrader",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2Upgrader>;

    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "Migrations",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Migrations>;
    deployContract(
      name: "Controller",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Controller>;
    deployContract(
      name: "MasterMinter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MasterMinter>;
    deployContract(
      name: "MintController",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MintController>;
    deployContract(
      name: "MinterManagementInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MinterManagementInterface>;
    deployContract(
      name: "ContractThatCallsPublicFunctions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractThatCallsPublicFunctions>;
    deployContract(
      name: "ContractThatReverts",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractThatReverts>;
    deployContract(
      name: "ContractWithExternalFunctions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractWithExternalFunctions>;
    deployContract(
      name: "ContractWithPublicFunctions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractWithPublicFunctions>;
    deployContract(
      name: "DummyERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DummyERC20>;
    deployContract(
      name: "ECRecoverTest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECRecoverTest>;
    deployContract(
      name: "EIP712Test",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Test>;
    deployContract(
      name: "MessageHashUtilsTest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MessageHashUtilsTest>;
    deployContract(
      name: "MockERC1271Wallet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1271Wallet>;
    deployContract(
      name: "MockERC1271WalletReturningBytes32",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1271WalletReturningBytes32>;
    deployContract(
      name: "MockERC1271WalletWithCustomValidation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1271WalletWithCustomValidation>;
    deployContract(
      name: "MockStateModifyingERC1271Wallet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockStateModifyingERC1271Wallet>;
    deployContract(
      name: "MockFiatTokenWithEditableBalanceAndBlacklistStates",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockFiatTokenWithEditableBalanceAndBlacklistStates>;
    deployContract(
      name: "MockFiatTokenWithEditableChainId",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockFiatTokenWithEditableChainId>;
    deployContract(
      name: "UpgradedFiatToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatToken>;
    deployContract(
      name: "UpgradedFiatTokenNewFieldsNewLogicTest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsNewLogicTest>;
    deployContract(
      name: "UpgradedFiatTokenNewFieldsTest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenNewFieldsTest>;
    deployContract(
      name: "UpgradedFiatTokenV2_2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenV2_2>;
    deployContract(
      name: "UpgradedFiatTokenV2_2NewFieldsTest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradedFiatTokenV2_2NewFieldsTest>;
    deployContract(
      name: "AdminUpgradeabilityProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AdminUpgradeabilityProxy>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "UpgradeabilityProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UpgradeabilityProxy>;
    deployContract(
      name: "SignatureChecker",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SignatureChecker>;
    deployContract(
      name: "FiatTokenV1_1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV1_1>;
    deployContract(
      name: "Rescuable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Rescuable>;
    deployContract(
      name: "AbstractFiatTokenV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractFiatTokenV1>;
    deployContract(
      name: "Blacklistable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Blacklistable>;
    deployContract(
      name: "FiatTokenProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenProxy>;
    deployContract(
      name: "FiatTokenV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV1>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "AbstractFiatTokenV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractFiatTokenV2>;
    deployContract(
      name: "EIP2612",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP2612>;
    deployContract(
      name: "EIP3009",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP3009>;
    deployContract(
      name: "EIP712Domain",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Domain>;
    deployContract(
      name: "FiatTokenUtil",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenUtil>;
    deployContract(
      name: "FiatTokenV2_1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV2_1>;
    deployContract(
      name: "FiatTokenV2_2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV2_2>;
    deployContract(
      name: "FiatTokenV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FiatTokenV2>;
    deployContract(
      name: "AbstractV2Upgrader",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractV2Upgrader>;
    deployContract(
      name: "AbstractUpgraderHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AbstractUpgraderHelper>;
    deployContract(
      name: "V2_2UpgraderHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2_2UpgraderHelper>;
    deployContract(
      name: "V2UpgraderHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2UpgraderHelper>;
    deployContract(
      name: "V2_1Upgrader",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2_1Upgrader>;
    deployContract(
      name: "V2_2Upgrader",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2_2Upgrader>;
    deployContract(
      name: "V2Upgrader",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.V2Upgrader>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
