{
  "address": "0x9CFD2e8dD3d8516705C4b913eA3d7AB2DFC6b932",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "ERC1967InvalidAdmin",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "ERC1967InvalidImplementation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC1967NonPayable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Usdc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Usdc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2UsdcMasterMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "proxyChangeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_otherBridge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l1Usdc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2Usdc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2UsdcMasterMinter",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb22e32f9ea2d8c634aa859af338bb0bcdea35769880f65f1533e5028a3149ba1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9CFD2e8dD3d8516705C4b913eA3d7AB2DFC6b932",
    "transactionIndex": 0,
    "gasUsed": "723024",
    "logsBloom": "0x
    "blockHash": "0x41ff31c002fa2dcf4866b14c71ff9ffa9a8cd31e550020950f7145fa45b922f9",
    "transactionHash": "0xb22e32f9ea2d8c634aa859af338bb0bcdea35769880f65f1533e5028a3149ba1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5063264,
        "transactionHash": "0xb22e32f9ea2d8c634aa859af338bb0bcdea35769880f65f1533e5028a3149ba1",
        "address": "0x9CFD2e8dD3d8516705C4b913eA3d7AB2DFC6b932",
        "topics": [
          "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
          "0x00000000000000000000000055a93954f883e3a0feb1f89653bd6dfa30ff2b04"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x41ff31c002fa2dcf4866b14c71ff9ffa9a8cd31e550020950f7145fa45b922f9"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5063264,
        "transactionHash": "0xb22e32f9ea2d8c634aa859af338bb0bcdea35769880f65f1533e5028a3149ba1",
        "address": "0x9CFD2e8dD3d8516705C4b913eA3d7AB2DFC6b932",
        "topics": [
          "0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 1,
        "blockHash": "0x41ff31c002fa2dcf4866b14c71ff9ffa9a8cd31e550020950f7145fa45b922f9"
      }
    ],
    "blockNumber": 5063264,
    "cumulativeGasUsed": "723024",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x55a93954F883e3A0fEB1F89653Bd6dfa30ff2B04",
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "0x"
  ],
  "numDeployments": 1,
  "solcInputHash": "7a779a27b8ed2c7ee254759c1b8fff3c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2UsdcMasterMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"proxyChangeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_otherBridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1Usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2UsdcMasterMinter\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L2/L2UsdcBridgeProxy.sol\":\"L2UsdcBridgeProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":625},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"./ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address implementation, bytes memory _data) payable {\\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return ERC1967Utils.getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/L2/L2UsdcBridgeProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ERC1967Proxy } from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\nimport { ERC1967Utils } from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport { L2UsdcBridgeStorage } from \\\"./L2UsdcBridgeStorage.sol\\\";\\n\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract L2UsdcBridgeProxy is L2UsdcBridgeStorage, ERC1967Proxy {\\n\\n    modifier onlyProxyOwner() {\\n        require(msg.sender == owner(), \\\"not owner\\\");\\n        _;\\n    }\\n\\n    modifier nonZeroAddress(address addr) {\\n        require(addr != address(0), \\\"zero address\\\");\\n        _;\\n    }\\n\\n    constructor(address _logic, address initialOwner, bytes memory _data)\\n        payable  ERC1967Proxy(_logic, _data)\\n    {\\n            ERC1967Utils.changeAdmin(initialOwner);\\n    }\\n\\n    receive() external payable {\\n        revert(\\\"cannot receive TON\\\");\\n    }\\n\\n    function proxyChangeOwner(address newAdmin) external onlyProxyOwner {\\n        ERC1967Utils.changeAdmin(newAdmin);\\n    }\\n\\n    function setAddress(\\n        address _messenger,\\n        address _otherBridge,\\n        address _l1Usdc,\\n        address _l2Usdc,\\n        address _l2UsdcMasterMinter\\n    ) external onlyProxyOwner\\n        nonZeroAddress(_messenger)\\n        nonZeroAddress(_otherBridge)\\n        nonZeroAddress(_l1Usdc)\\n        nonZeroAddress(_l2Usdc)\\n        nonZeroAddress(_l2UsdcMasterMinter)\\n    {\\n        messenger = _messenger;\\n        otherBridge = _otherBridge;\\n        l1Usdc = _l1Usdc;\\n        l2Usdc = _l2Usdc;\\n        l2UsdcMasterMinter = _l2UsdcMasterMinter;\\n    }\\n\\n    function upgradeTo(address newImplementation) external onlyProxyOwner {\\n        ERC1967Utils.upgradeToAndCall(newImplementation, bytes(''));\\n    }\\n\\n    function upgradeToAndCall(address newImplementation, bytes memory data) external onlyProxyOwner {\\n        ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n    }\\n\\n    function owner() public view returns (address) {\\n        return ERC1967Utils.getAdmin();\\n    }\\n\\n    function implementation() external view returns (address) {\\n        return _implementation();\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7d7c4550d21859db27fc2032e5427f391e6749ca27051b4033a5a32ba8c7c8a9\",\"license\":\"MIT\"},\"contracts/L2/L2UsdcBridgeStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { StandardBridgeStorage } from \\\"../universal/StandardBridgeStorage.sol\\\";\\n\\ncontract L2UsdcBridgeStorage is StandardBridgeStorage {\\n\\n    address public l2UsdcMasterMinter;\\n\\n}\\n\",\"keccak256\":\"0xc937f8311a011e0e30b193bb48e55b26b38429aa5dbfba12229bb4a1b7f680fa\",\"license\":\"MIT\"},\"contracts/universal/StandardBridgeStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ncontract StandardBridgeStorage  {\\n    address public messenger;\\n    address public otherBridge;\\n    address public l1Usdc;\\n    address public l2Usdc;\\n\\n    modifier onlyL1Usdc(address token) {\\n        require(token == l1Usdc, \\\"not L1 usdc\\\");\\n        _;\\n    }\\n\\n    modifier onlyL2Usdc(address token) {\\n        require(token == l2Usdc, \\\"not L2 usdc\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xc9f02cc28e8fb9d441aae3dcedf8953bf225773af7fd75c634cdeea00d37c0b7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260405162000f7938038062000f7983398101604081905262000026916200036e565b82816200003482826200004b565b5062000042905082620000b1565b5050506200046c565b620000568262000123565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000a3576200009e8282620001a3565b505050565b620000ad62000220565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000f360008051602062000f59833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001208162000242565b50565b806001600160a01b03163b6000036200015f57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620001c291906200044e565b600060405180830381855af49150503d8060008114620001ff576040519150601f19603f3d011682016040523d82523d6000602084013e62000204565b606091505b5090925090506200021785838362000285565b95945050505050565b3415620002405760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b0381166200026e57604051633173bdd160e11b81526000600482015260240162000156565b8060008051602062000f5983398151915262000182565b6060826200029e576200029882620002eb565b620002e4565b8151158015620002b657506001600160a01b0384163b155b15620002e157604051639996b31560e01b81526001600160a01b038516600482015260240162000156565b50805b9392505050565b805115620002fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146200032d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003655781810151838201526020016200034b565b50506000910152565b6000806000606084860312156200038457600080fd5b6200038f8462000315565b92506200039f6020850162000315565b60408501519092506001600160401b0380821115620003bd57600080fd5b818601915086601f830112620003d257600080fd5b815181811115620003e757620003e762000332565b604051601f8201601f19908116603f0116810190838211818310171562000412576200041262000332565b816040528281528960208487010111156200042c57600080fd5b6200043f83602083016020880162000348565b80955050505050509250925092565b600082516200046281846020870162000348565b9190910192915050565b610add806200047c6000396000f3fe6080604052600436106100c05760003560e01c806356c3b58711610074578063a1b4bc041161004e578063a1b4bc0414610222578063c89701a214610242578063dfd3dcb31461026257610112565b806356c3b587146101d85780635c60da1b146101f85780638da5cb5b1461020d57610112565b80633659cfe6116100a55780633659cfe6146101785780633cb747bf146101985780634f1ef286146101b857610112565b806305db940f1461011c57806312c594881461015857610112565b366101125760405162461bcd60e51b815260206004820152601260248201527f63616e6e6f74207265636569766520544f4e000000000000000000000000000060448201526064015b60405180910390fd5b61011a610282565b005b34801561012857600080fd5b5060045461013c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561016457600080fd5b5061011a610173366004610949565b610294565b34801561018457600080fd5b5061011a6101933660046109ae565b6104b8565b3480156101a457600080fd5b5060005461013c906001600160a01b031681565b3480156101c457600080fd5b5061011a6101d33660046109df565b610528565b3480156101e457600080fd5b5060025461013c906001600160a01b031681565b34801561020457600080fd5b5061013c61058a565b34801561021957600080fd5b5061013c610599565b34801561022e57600080fd5b5060035461013c906001600160a01b031681565b34801561024e57600080fd5b5060015461013c906001600160a01b031681565b34801561026e57600080fd5b5061011a61027d3660046109ae565b6105a3565b61029261028d610600565b61060a565b565b61029c610599565b6001600160a01b0316336001600160a01b0316146102e85760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b846001600160a01b03811661032e5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166103745760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166103ba5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166104005760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166104465760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b50506000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039a8b1617909155600180548216988a16989098179097555050600280548616948716949094179093556003805485169286169290921790915560048054909316931692909217905550565b6104c0610599565b6001600160a01b0316336001600160a01b03161461050c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b610525816040518060200160405280600081525061062e565b50565b610530610599565b6001600160a01b0316336001600160a01b03161461057c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b610586828261062e565b5050565b6000610594610600565b905090565b6000610594610689565b6105ab610599565b6001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b610525816106bc565b6000610594610710565b3660008037600080366000845af43d6000803e808015610629573d6000f35b3d6000fd5b61063782610738565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156106815761067c82826107bf565b505050565b610586610835565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6106e5610689565b604080516001600160a01b03928316815291841660208301520160405180910390a161052581610854565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6106ad565b806001600160a01b03163b60000361076e57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610109565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b6060600080846001600160a01b0316846040516107dc9190610aa1565b600060405180830381855af49150503d8060008114610817576040519150601f19603f3d011682016040523d82523d6000602084013e61081c565b606091505b509150915061082c8583836108a5565b95945050505050565b34156102925760405163b398979f60e01b815260040160405180910390fd5b6001600160a01b03811661087e57604051633173bdd160e11b815260006004820152602401610109565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610791565b6060826108ba576108b582610904565b6108fd565b81511580156108d157506001600160a01b0384163b155b156108fa57604051639996b31560e01b81526001600160a01b0385166004820152602401610109565b50805b9392505050565b8051156109145780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461094457600080fd5b919050565b600080600080600060a0868803121561096157600080fd5b61096a8661092d565b94506109786020870161092d565b93506109866040870161092d565b92506109946060870161092d565b91506109a26080870161092d565b90509295509295909350565b6000602082840312156109c057600080fd5b6108fd8261092d565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109f257600080fd5b6109fb8361092d565b9150602083013567ffffffffffffffff80821115610a1857600080fd5b818501915085601f830112610a2c57600080fd5b813581811115610a3e57610a3e6109c9565b604051601f8201601f19908116603f01168101908382118183101715610a6657610a666109c9565b81604052828152886020848701011115610a7f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b81811015610ac25760208186018101518583015201610aa8565b50600092019182525091905056fea164736f6c6343000814000ab53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
  "deployedBytecode": "0x6080604052600436106100c05760003560e01c806356c3b58711610074578063a1b4bc041161004e578063a1b4bc0414610222578063c89701a214610242578063dfd3dcb31461026257610112565b806356c3b587146101d85780635c60da1b146101f85780638da5cb5b1461020d57610112565b80633659cfe6116100a55780633659cfe6146101785780633cb747bf146101985780634f1ef286146101b857610112565b806305db940f1461011c57806312c594881461015857610112565b366101125760405162461bcd60e51b815260206004820152601260248201527f63616e6e6f74207265636569766520544f4e000000000000000000000000000060448201526064015b60405180910390fd5b61011a610282565b005b34801561012857600080fd5b5060045461013c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561016457600080fd5b5061011a610173366004610949565b610294565b34801561018457600080fd5b5061011a6101933660046109ae565b6104b8565b3480156101a457600080fd5b5060005461013c906001600160a01b031681565b3480156101c457600080fd5b5061011a6101d33660046109df565b610528565b3480156101e457600080fd5b5060025461013c906001600160a01b031681565b34801561020457600080fd5b5061013c61058a565b34801561021957600080fd5b5061013c610599565b34801561022e57600080fd5b5060035461013c906001600160a01b031681565b34801561024e57600080fd5b5060015461013c906001600160a01b031681565b34801561026e57600080fd5b5061011a61027d3660046109ae565b6105a3565b61029261028d610600565b61060a565b565b61029c610599565b6001600160a01b0316336001600160a01b0316146102e85760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b846001600160a01b03811661032e5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166103745760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166103ba5760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166104005760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b846001600160a01b0381166104465760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b6044820152606401610109565b50506000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039a8b1617909155600180548216988a16989098179097555050600280548616948716949094179093556003805485169286169290921790915560048054909316931692909217905550565b6104c0610599565b6001600160a01b0316336001600160a01b03161461050c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b610525816040518060200160405280600081525061062e565b50565b610530610599565b6001600160a01b0316336001600160a01b03161461057c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b610586828261062e565b5050565b6000610594610600565b905090565b6000610594610689565b6105ab610599565b6001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610109565b610525816106bc565b6000610594610710565b3660008037600080366000845af43d6000803e808015610629573d6000f35b3d6000fd5b61063782610738565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156106815761067c82826107bf565b505050565b610586610835565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6106e5610689565b604080516001600160a01b03928316815291841660208301520160405180910390a161052581610854565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc6106ad565b806001600160a01b03163b60000361076e57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610109565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905550565b6060600080846001600160a01b0316846040516107dc9190610aa1565b600060405180830381855af49150503d8060008114610817576040519150601f19603f3d011682016040523d82523d6000602084013e61081c565b606091505b509150915061082c8583836108a5565b95945050505050565b34156102925760405163b398979f60e01b815260040160405180910390fd5b6001600160a01b03811661087e57604051633173bdd160e11b815260006004820152602401610109565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610791565b6060826108ba576108b582610904565b6108fd565b81511580156108d157506001600160a01b0384163b155b156108fa57604051639996b31560e01b81526001600160a01b0385166004820152602401610109565b50805b9392505050565b8051156109145780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461094457600080fd5b919050565b600080600080600060a0868803121561096157600080fd5b61096a8661092d565b94506109786020870161092d565b93506109866040870161092d565b92506109946060870161092d565b91506109a26080870161092d565b90509295509295909350565b6000602082840312156109c057600080fd5b6108fd8261092d565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109f257600080fd5b6109fb8361092d565b9150602083013567ffffffffffffffff80821115610a1857600080fd5b818501915085601f830112610a2c57600080fd5b813581811115610a3e57610a3e6109c9565b604051601f8201601f19908116603f01168101908382118183101715610a6657610a666109c9565b81604052828152886020848701011115610a7f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b81811015610ac25760208186018101518583015201610aa8565b50600092019182525091905056fea164736f6c6343000814000a",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "ERC1967InvalidAdmin(address)": [
        {
          "details": "The `admin` of the proxy is invalid."
        }
      ],
      "ERC1967InvalidImplementation(address)": [
        {
          "details": "The `implementation` of the proxy is invalid."
        }
      ],
      "ERC1967NonPayable()": [
        {
          "details": "An upgrade function sees `msg.value > 0` that may be lost."
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ]
    },
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3007,
        "contract": "contracts/L2/L2UsdcBridgeProxy.sol:L2UsdcBridgeProxy",
        "label": "messenger",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3009,
        "contract": "contracts/L2/L2UsdcBridgeProxy.sol:L2UsdcBridgeProxy",
        "label": "otherBridge",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3011,
        "contract": "contracts/L2/L2UsdcBridgeProxy.sol:L2UsdcBridgeProxy",
        "label": "l1Usdc",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3013,
        "contract": "contracts/L2/L2UsdcBridgeProxy.sol:L2UsdcBridgeProxy",
        "label": "l2Usdc",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2209,
        "contract": "contracts/L2/L2UsdcBridgeProxy.sol:L2UsdcBridgeProxy",
        "label": "l2UsdcMasterMinter",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}